@model RequestApproval.DTO.UserDTO

@{
    ViewBag.Title = "SignUp";
}

    @if (Session["Permission"] != null)
    {
        <h2>Add User</h2>
    }
    else
    {
        <h2>Sign Up</h2>
    }

<style>
    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <p class="text-danger">@ViewBag.Notification</p>
        </div>
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container form-group">
        <div class="row">
            <div class="col">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="col">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 required" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2 required" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 required" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            @if (Session["Permission"] == null)
                {
                <div class="col">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 required" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                }
        </div>
        <div class="row mt-4">
            <div class="col">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>

</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
