@model RequestApproval.DTO.UserDTO

@{
    ViewBag.Title = "Edit";
}
@{

    Dictionary<bool, string> IsActive = new Dictionary<bool, string>();
    IsActive.Add(true, "Active");
    IsActive.Add(false, "InActive");

}
<h2>Edit</h2>


@using (Html.BeginForm("Edit", "User", FormMethod.Post))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="container form-group">
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                </div>
                <div class="col">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                </div>
                <div class="col">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { disabled = true, @class = "form-control", } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>
                <div class="col">


                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <br />
                    @Html.DropDownListFor(model => model.IsActive, new SelectList(IsActive,"Key", "Value"), new { htmlAttributes = new { @class = "form-control dropdown" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="row">
                <div class="col">

                </div>
                <div class="col">
                    <input type="submit" value="Update" class="btn btn-success" />
                </div>

            </div>

        </div>
    </div>










}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
