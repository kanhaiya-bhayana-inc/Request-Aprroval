@model IEnumerable<RequestApproval.DTO.UserDTO>

@{
    ViewBag.Title = "UserDashboard";
}

@{ 
    List<string> quotes = new List<string>();
    quotes.Add("It is often the small steps, not the giant leaps, that bring about the most lasting change.");
    quotes.Add("Education is the most powerful weapon which you can use to change the world.");
    quotes.Add("There is always light. If only we're brave enough to see it. If only we're brave enough to be it.");
    quotes.Add("If you want to lift yourself up, lift up someone else.");
    quotes.Add("I have learned not to allow rejection to move me.");
    quotes.Add("I scorched the earth with my talent and I let my light shine.");
    quotes.Add("You’re braver than you believe, stronger than you seem, and smarter than you think.");
    quotes.Add("It took me quite a long time to develop a voice, and now that I have it, I am not going to be silent.");
    quotes.Add("You can't rely on how you look to sustain you, what sustains us, what is fundamentally beautiful is compassion; for yourself and your those around you.");
    quotes.Add("Attitude is the 'little' thing that makes a big difference.");
    quotes.Add("We will fail when we fail to try.");
    quotes.Add("All our dreams can come true — if we have the courage to pursue them.");
    quotes.Add("Once you face your fear, nothing is ever as hard as you think.");

    Random rand = new Random();
    int index = rand.Next(quotes.Count);
    ViewBag.Quote = quotes[index];
}



@*
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsActive)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserType)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @if (item.LastName.IsEmpty())
            {
                @Html.Label("NA")
            }
            else
            {
                @Html.DisplayFor(modelItem => item.LastName)
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
       
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        
        <td>
            @if (item.IsActive)
            {
                @Html.Label("Active")
            }
            else
            {
                @Html.Label("In-Active")
            }
        </td>
        
        <td>
            @Html.DisplayFor(modelItem => item.UserType)
        </td>
        
    </tr>

}

</table>*@
<div class="card text-center mt-5">
    @foreach (var item in Model)
    {
        <div class="card-header">
            <b>@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</b>
        </div>
        <div class="card-body">
            @*<h5 class="card-title">Special title treatment</h5>*@
            <p class="card-text"><i>@Html.DisplayFor(modelItem => item.Email) | @Html.DisplayFor(modelItem => item.Phone) | @Html.DisplayFor(modelItem => item.Address)</i></p>
@*            <p class="card-text">Status: @Html.DisplayFor(modelItem => item.IsActive) | UserType: @Html.DisplayFor(modelItem => item.UserType) </p>
*@            <p class="card-text"><b><i>"@ViewBag.Quote"</i></b></p>
        </div>
        
    }
    </div>
